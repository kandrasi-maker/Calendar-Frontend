const Header = () => ( <header className="p-4 border-b bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm sticky top-0 z-20 dark:border-gray-700"><div className="container mx-auto flex justify-between items-center"><div className="flex items-center gap-4"><div className="flex items-center gap-3"><CalendarIcon /><h1 className="text-xl font-bold text-gray-800 dark:text-gray-100">Unified Availability</h1></div><div className="flex items-center gap-2"><button onClick={() => setViewStartDate(prev => addDays(prev, -7))} className="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"><ChevronLeftIcon /></button><button onClick={() => setViewStartDate(getStartOfWeek(new Date()))} className="px-4 py-2 text-sm rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">Today</button><button onClick={() => setViewStartDate(prev => addDays(prev, 7))} className="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"><ChevronRightIcon /></button></div><span className="text-sm text-gray-500 dark:text-gray-400 hidden md:block">{viewStartDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })} - {addDays(viewStartDate, 6).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</span></div><div className="flex items-center gap-3"><span className="text-sm text-gray-600 dark:text-gray-400 hidden lg:block">{user?.email || ''}</span>{isGoogleConnected ? (<button className="flex items-center gap-2 px-3 py-2 text-sm bg-green-100 text-green-700 dark:bg-green-900/50 dark:text-green-300 rounded-lg"><GoogleIcon /> Connected</button>) : (<button onClick={() => handleConnect('google')} className="flex items-center gap-2 px-3 py-2 text-sm bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-200 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"><GoogleIcon /> Connect Google</button>)}{isOutlookConnected ? (<button className="flex items-center gap-2 px-3 py-2 text-sm bg-green-100 text-green-700 dark:bg-green-900/50 dark:text-green-300 rounded-lg"><OutlookIcon /> Connected</button>) : (<button onClick={() => handleConnect('outlook')} className="flex items-center gap-2 px-3 py-2 text-sm bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-200 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"><OutlookIcon /> Connect Outlook</button>)}<button onClick={() => setShowBoundaryModal(true)} className="flex items-center gap-2 px-4 py-2 text-sm font-semibold bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-sm"><PlusIcon /> Create Block</button><button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} className="p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">{theme === 'light' ? <MoonIcon/> : <SunIcon />}</button><button onClick={handleLogout} title="Logout" className="p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"><LogoutIcon/></button></div></div></header>);
    